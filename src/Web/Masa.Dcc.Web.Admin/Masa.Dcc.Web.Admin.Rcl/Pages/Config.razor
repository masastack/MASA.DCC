@page "/{AppId:int}/{EnvironmentClusterId:int}/{ConfigObjectType:int}/Config"
@inherits MasaCompontentBase

<div class="d-flex">
    <MNavigationDrawer Right Permanent Class="rounded-4" Width="300" Style="@Style">
        <div style="min-width:300px; padding:16px 24px; display:flex; flex-direction:column; align-items:center; overflow: auto;">
            <div style="width:100%;" class="text-body2">
                <MRow NoGutters Align="AlignTypes.Center" Justify="JustifyTypes.SpaceBetween">
                    <div class="text-h6">@_appDetail.Name</div>

                    <MMenu OffsetY>
                        <ActivatorContent>
                            <MButton Icon @attributes="@context.Attrs">
                                <MIcon Color="black">mdi-dots-horizontal</MIcon>
                            </MButton>
                        </ActivatorContent>
                        <ChildContent>
                            @*<MList Disabled Dense>
                            <MListItem Dense>
                            <MIcon Color="#323D6F" Class="mr-4">mdi-key-outline</MIcon>
                            <MListItemContent>
                            <MListItemTitle>管理密钥</MListItemTitle>
                            </MListItemContent>
                            </MListItem>
                            </MList>
                            <MList Disabled Dense>
                            <MListItem Dense>
                            <MIcon Color="#323D6F" Class="mr-4">mdi-refresh</MIcon>
                            <MListItemContent>
                            <MListItemTitle>强制刷新密钥</MListItemTitle>
                            </MListItemContent>
                            </MListItem>
                            </MList>*@
                            @if (ConfigObjectType == ConfigObjectType.App)
                            {
                                <MList Dense>
                                    <MListItem Dense OnClick="()=>ShowCloneModalAsync()">
                                        <MIcon Color="#323D6F" Size="20" Class="mr-4">far fa-copy</MIcon>
                                        <MListItemContent>
                                            <MListItemTitle>@T("Clone config")</MListItemTitle>
                                        </MListItemContent>
                                    </MListItem>
                                </MList>
                            }
                        </ChildContent>
                    </MMenu>
                </MRow>
                <MRow NoGutters Class="text-caption">
                    @_appDetail.Identity
                </MRow>
                <MRow NoGutters Class="mt-4">
                    @_appDetail.Description
                </MRow>
                <MRow NoGutters Class="text-caption mt-6">@T("Environment")</MRow>
                <MRow NoGutters>
                    <MChipGroup Column>
                        @foreach (var item in _appEnvs)
                        {
                            var isSelected = _selectCluster.EnvironmentName == item.EnvironmentName;
                            var textColor = isSelected ? "white" : "";
                            <MChip OnClick="()=>OnEnvChipClick(item.EnvironmentName)"
                               Outlined="@(_selectEnvName != item.EnvironmentName)"
                               Color="@item.EnvironmentColor"
                               TextColor="@textColor"
                               Class="mr-3 mt-3 text-overflow">
                                @item.EnvironmentName
                            </MChip>
                        }
                    </MChipGroup>
                </MRow>
                <MRow NoGutters Class="text-caption mt-6">@T("Cluster")</MRow>
                <MRow NoGutters>
                    <MChipGroup Column>
                        @foreach (var item in _appClusters)
                        {
                            var isSelected = _selectCluster.ClusterName == item.ClusterName;
                            var textColor = isSelected ? "white" : "";
                            <MChip OnClick="()=>OnClusterChipClick(item)"
                               Outlined="@(!isSelected)"
                               TextColor="@textColor"
                               Color="#323D6F"
                               Class="mr-3 mt-3 text-overflow">
                                @item.ClusterName
                            </MChip>
                        }
                    </MChipGroup>
                </MRow>
            </div>
        </div>
        @if (ConfigObjectType == ConfigObjectType.App)
        {
            <div @onclick="ShowRelationModal" style="width:100%; color:#323D6F; font-size:14px; position: fixed; right:24px; bottom: 24px;" class="d-flex justify-end hover-pointer">
                <MIcon Size="16" Class="mr-1">mdi-link-variant</MIcon>@T("Connect public config")
            </div>
        }
    </MNavigationDrawer>

    <div class="pl-6" style="width: calc(100% - 300px); display:block;">
        <div class="rounded-5 pa-6" style="background:#fff;overflow: hidden;">
            <div class="d-flex mb-6">
                <MTextField @bind-Value="_configObjectName" OnKeyDown="SearchConfigObjectAsync" Class="rounded-2" Height="40" Flat Dense Solo BackgroundColor="fill-lighten-1" HideDetails="@("auto")" Placeholder="@T("Please enter the config name and press enter to query")">
                    <PrependInnerContent>
                        <MIcon Size=16 Class="mr-2 neutral-lighten-1--text">mdi-magnify</MIcon>
                    </PrependInnerContent>
                </MTextField>
                <MButton Class="rounded-pill ml-6" Color="primary" OnClick="ShowAddConfigObjectModalAsync">
                    <MIcon Small>mdi-plus </MIcon>@T("Add")
                </MButton>
            </div>
            <div style="margin:0 -24px; overflow:auto; @ConfigPanelStyle">
                <MExpansionPanels Flat Accordion>
                    @foreach (var configObject in _configObjects)
                    {
                        var formatLabelCode = configObject.FormatLabelCode.Trim().ToLower();
                        if (formatLabelCode == "json")
                        {
                            <MExpansionPanel Style="margin-bottom: 12px;">
                                <MExpansionPanelHeader Context="_">
                                    <div class="text-h6 d-flex align-center">
                                        @if (configObject.FromRelation)
                                        {
                                            <MIcon Color="primary" Class="mr-2">mdi-link-variant</MIcon>
                                        }
                                        @if (configObject.RelationConfigObjectId == 0 && !configObject.IsPublished && !configObject.IsEditing)
                                        {
                                            <div class="mr-2" style="height: 26px;width: 48px; background: #FF7D00; text-align: center; font-size: 12px;color: white; border-radius: 16px; font-weight: normal; line-height: 26px;">
                                                @T("Modified")
                                            </div>
                                        }
                                        <span>@configObject.Name</span>
                                        <span class="ml-3 text-caption">|</span>
                                        <sapn class="ml-2 text-caption">@configObject.FormatName</sapn>
                                        <MSpacer></MSpacer>
                                        <MButton StopPropagation Icon Class="mr-4" OnClick="()=> UpdateJsonConfigAsync(configObject)">
                                            @if (!configObject.IsEditing)
                                            {
                                                <MIcon Color="#323D6F">@(configObject.RelationConfigObjectId == 0 ? "mdi-pencil" : "mdi-link-variant-off")</MIcon>
                                            }
                                            else
                                            {
                                                <MIcon Color="success">mdi-check</MIcon>
                                            }
                                        </MButton>
                                        @if (ConfigObjectType == ConfigObjectType.App)
                                        {
                                            <MButton StopPropagation Icon Class="mr-4" OnClick="()=>ShowCloneModalAsync(configObject)"><MIcon Size="20" Color="#323D6F">fas fa-copy</MIcon></MButton>
                                        }
                                        <MButton StopPropagation Icon Class="mr-4" OnClick="()=>ShowReleaseModalAsync(configObject)"><MIcon Color="#323D6F">mdi-send</MIcon></MButton>

                                        <MMenu OffsetY>
                                            <ActivatorContent>
                                                <MButton @attributes="@context.Attrs" StopPropagation Icon Class="mr-4">
                                                    <MIcon Color="#323D6F">mdi-dots-vertical</MIcon>
                                                </MButton>
                                            </ActivatorContent>
                                            <ChildContent>
                                                <MList>
                                                    <MListItem OnClick="()=>ShowReleaseHistoryAsync(configObject)">
                                                        <MIcon Class="mr-4">mdi-history</MIcon>
                                                        <MListItemContent>
                                                            <MListItemTitle>@T("Release history")</MListItemTitle>
                                                        </MListItemContent>
                                                    </MListItem>
                                                    <MListItem OnClick="()=>ShowRollbackModalAsync(configObject)">
                                                        <MIcon Class="mr-4">mdi-repeat</MIcon>
                                                        <MListItemContent>
                                                            <MListItemTitle>
                                                                @T("Rollback")
                                                            </MListItemTitle>
                                                        </MListItemContent>
                                                    </MListItem>
                                                    <MListItem OnClick="()=>RevokeAsync(configObject)">
                                                        <MIcon Class="mr-4">mdi-subdirectory-arrow-left</MIcon>
                                                        <MListItemContent>
                                                            <MListItemTitle>
                                                                @T("Revoke")
                                                            </MListItemTitle>
                                                        </MListItemContent>
                                                    </MListItem>
                                                    <MDivider></MDivider>
                                                    <MListItem OnClick="()=>RemoveAsync(configObject)">
                                                        <MIcon Class="mr-4" Color="error">mdi-delete</MIcon>
                                                        <MListItemContent>
                                                            <MListItemTitle Class="error--text">
                                                                @T("Delete")
                                                            </MListItemTitle>
                                                        </MListItemContent>
                                                    </MListItem>
                                                </MList>
                                            </ChildContent>
                                        </MMenu>
                                        <span class="mr-6 text-caption">|</span>
                                    </div>
                                </MExpansionPanelHeader>
                                <MExpansionPanelContent>
                                    @if (configObject.FromRelation && configObject.RelationConfigObjectId != 0)
                                    {
                                        <div class="mb-2">
                                            <MIcon Size="18" Color="#7681AB">mdi-link-variant</MIcon>
                                            <span style="font-size: 14px; color: #7681AB;">
                                                @T("Connected")
                                                <span class="text-caption mx-1 font-size: 6px !important;">|</span>
                                                @(configObject.IsPublished ? @T("Released") : @T("UnReleased"))
                                            </span>
                                        </div>
                                    }
                                    else if (configObject.FromRelation && configObject.RelationConfigObjectId == 0)
                                    {
                                        <div class="mb-2">
                                            <MIcon Size="18" Color="#7681AB">mdi-link-variant-off</MIcon>
                                            <span style="font-size: 14px; color: #7681AB;">@T("Covered")</span>
                                        </div>
                                    }
                                    <JsonEditor Disabled="!configObject.IsEditing" @bind-Value="@configObject.Content"></JsonEditor>
                                </MExpansionPanelContent>
                            </MExpansionPanel>
                        }
                        else if (formatLabelCode == "properties")
                        {
                            <MExpansionPanel>
                                <MExpansionPanelHeader Context="_">
                                    <div class="text-h6 d-flex align-center">
                                        @if (configObject.FromRelation)
                                        {
                                            <MIcon Color="primary" Class="mr-2">mdi-link-variant</MIcon>
                                        }
                                        @configObject.Name
                                        <span class="ml-3 text-caption">|</span>
                                        <sapn class="ml-2 text-caption">@configObject.FormatLabelCode</sapn>
                                        <MSpacer></MSpacer>
                                        @if (!configObject.FromRelation)
                                        {
                                            <MButton StopPropagation Icon Class="mr-4" OnClick="()=>ShowPropertyModal(configObject,configObject.ConfigObjectPropertyContents)"><MIcon Color="#323D6F">mdi-plus-circle</MIcon></MButton>
                                        }
                                        @if (ConfigObjectType == ConfigObjectType.App)
                                        {
                                            <MButton StopPropagation Icon Class="mr-4" OnClick="()=>ShowCloneModalAsync(configObject)"><MIcon Size="20" Color="#323D6F">fas fa-copy</MIcon></MButton>
                                        }
                                        <MButton StopPropagation Icon Class="mr-4" OnClick="()=>ShowReleaseModalAsync(configObject)"><MIcon Color="#323D6F">mdi-send</MIcon></MButton>
                                        <MMenu OffsetY>
                                            <ActivatorContent>
                                                <MButton @attributes="@context.Attrs" StopPropagation Icon Class="mr-4">
                                                    <MIcon Color="#323D6F">mdi-dots-vertical</MIcon>
                                                </MButton>
                                            </ActivatorContent>
                                            <ChildContent>
                                                <MList>
                                                    <MListItem OnClick="()=>ShowReleaseHistoryAsync(configObject)">
                                                        <MIcon Class="mr-4">mdi-history</MIcon>
                                                        <MListItemContent>
                                                            <MListItemTitle>@T("Release history")</MListItemTitle>
                                                        </MListItemContent>
                                                    </MListItem>
                                                    <MListItem OnClick="()=>ShowRollbackModalAsync(configObject)">
                                                        <MIcon Class="mr-4">mdi-repeat</MIcon>
                                                        <MListItemContent>
                                                            <MListItemTitle>
                                                                @T("Rollback")
                                                            </MListItemTitle>
                                                        </MListItemContent>
                                                    </MListItem>
                                                    <MListItem OnClick="()=>RevokeAsync(configObject)">
                                                        <MIcon Class="mr-4">mdi-subdirectory-arrow-left</MIcon>
                                                        <MListItemContent>
                                                            <MListItemTitle>
                                                                @T("Revoke")
                                                            </MListItemTitle>
                                                        </MListItemContent>
                                                    </MListItem>
                                                    <MDivider></MDivider>
                                                    <MListItem OnClick="()=>RemoveAsync(configObject)">
                                                        <MIcon Class="mr-4" Color="error">mdi-delete</MIcon>
                                                        <MListItemContent>
                                                            <MListItemTitle Class="error--text">
                                                                @T("Delete")
                                                            </MListItemTitle>
                                                        </MListItemContent>
                                                    </MListItem>
                                                </MList>
                                            </ChildContent>
                                        </MMenu>
                                        <span class="mr-6 text-caption">|</span>
                                    </div>
                                </MExpansionPanelHeader>
                                <MExpansionPanelContent>
                                    @if (configObject.RelationConfigObjectId != 0)
                                    {
                                        <MCard Style="border:1px solid #E2E7F4;" Class="py-3 mt-4">
                                            <MDataTable Headers="_headers"
                                            SortDesc="true"
                                            SortBy="new List<string>{ nameof(ConfigObjectPropertyModel.IsPublished) }"
                                            TItem="ConfigObjectPropertyModel"
                                            Items="@configObject.ConfigObjectPropertyContents"
                                            Class="table-border-none"
                                            HideDefaultFooter>
                                                <HeaderColContent Context="header">
                                                    <span class="text-caption">@header.Text</span>
                                                </HeaderColContent>
                                                <ItemColContent>
                                                    @switch (@context.Header.Text)
                                                    {
                                                        case "状态":
                                                            string icon = context.Item.IsRelationed ? "mdi-link-variant" : "mdi-link-variant-off";
                                                            string color = "";
                                                            string text = "";
                                                            @if (context.Item.IsPublished)
                                                            {
                                                                color = "#05CD99";
                                                                text = @T("Released");
                                                            }
                                                            else
                                                            {
                                                                color = "#7681AB";
                                                                text = @T("UnReleased");
                                                            }
                                                            <MIcon Style="margin-bottom:2px;" Size="20" Color="@color">@icon</MIcon>
                                                            <span style="color: @color;">@text</span>
                                                            break;
                                                        case "操作":
                                                            <MIcon Class="mr-3 hover-pointer" Color="#485585" Size="20" OnClick="()=>ShowPropertyModal(configObject, null, context.Item)">mdi-link-variant-off</MIcon>
                                                            break;
                                                        case "修改时间":
                                                            <span>@context.Item.ModificationTime.ToString(T("$DateTimeFormat"))</span>
                                                            break;
                                                        default:
                                                            @context.Value
                                                            break;
                                                    }
                                                </ItemColContent>
                                            </MDataTable>
                                        </MCard>
                                    }
                                    else
                                    {
                                        <ElevationTab TabIndex="_tabIndex"
                                          Left
                                          TabIndexChanged="index=>HandleTabIndexChanged(index,configObject.ConfigObjectPropertyContents)"
                                          TabMinWidth="70"
                                          ItemsClass="rounded-5"
                                          Dense
                                          Tabs="@(new List<string>{ T("Table"), T("Text") })">
                                            <ElevationTabItem>
                                                <MCard Style="border:1px solid #E2E7F4;" Class="py-3 mt-4">
                                                    <MDataTable Headers="_headers"
                                                    SortDesc="true"
                                                    SortBy="new List<string>{ nameof(ConfigObjectPropertyModel.IsPublished) }"
                                                    TItem="ConfigObjectPropertyModel"
                                                    Items="@configObject.ConfigObjectPropertyContents"
                                                    Class="table-border-none"
                                                    HideDefaultFooter>
                                                        <HeaderColContent Context="header">
                                                            <span class="text-caption">@header.Text</span>
                                                        </HeaderColContent>
                                                        <ItemColContent>
                                                            @switch (@context.Header.Text)
                                                            {
                                                                case "状态":
                                                                    if (context.Item.IsPublished)
                                                                    {
                                                                        <MIcon Style="margin-bottom:2px;" Size="20" Color="#05CD99">mdi-send</MIcon>
                                                                        <span style="color:#05CD99;">@T("Released")</span>
                                                                    }
                                                                    else
                                                                    {
                                                                        if (context.Item.IsAdded)
                                                                        {
                                                                            <MIcon Class="mr-1" Color="#7681AB" Style="margin-bottom:2px;" Size="16">mdi-plus</MIcon>
                                                                        }
                                                                        else if (context.Item.IsEdited)
                                                                        {
                                                                            <MIcon Class="mr-1" Color="#7681AB" Style="margin-bottom:2px;" Size="16">mdi-pencil</MIcon>
                                                                        }
                                                                        else if (context.Item.IsDeleted)
                                                                        {
                                                                            <MIcon Class="mr-1" Color="#7681AB" Style="margin-bottom:2px;" Size="16">mdi-delete</MIcon>
                                                                        }
                                                                        <span>@T("UnReleased")</span>
                                                                    }
                                                                    break;
                                                                case "操作":
                                                                    <MIcon Class="mr-3 hover-pointer" Color="#485585" Size="20" OnClick="()=>ShowPropertyModal(configObject, null, context.Item)">mdi-pencil</MIcon>
                                                                    <MIcon Class="hover-pointer" Size="20" Color="error" OnClick="()=>DeleteConfigObjectPropertyContentAsync(context.Item, configObject.Id)">mdi-delete</MIcon>
                                                                    break;
                                                                case "修改时间":
                                                                    <span>@context.Item.ModificationTime.ToString(T("$DateTimeFormat"))</span>
                                                                    break;
                                                                default:
                                                                    @context.Value
                                                                    break;
                                                            }
                                                        </ItemColContent>
                                                    </MDataTable>
                                                </MCard>
                                            </ElevationTabItem>
                                            <ElevationTabItem>
                                                <div class="d-flex justify-end">
                                                    <MButton StopPropagation Icon Class="mr-4 mb-2">
                                                        @if (!_selectEditorContent.Disabled)
                                                        {
                                                            <MIcon Class="hover-pointer" OnClick="()=>{ _selectEditorContent.Disabled = !_selectEditorContent.Disabled; }" Color="#323D6F">mdi-pencil</MIcon>
                                                        }
                                                        else
                                                        {
                                                            <MIcon OnClick="()=>TextConvertPropertyAsync(configObject.Id)" Color="success">mdi-check</MIcon>
                                                        }
                                                    </MButton>
                                                </div>
                                                <Editor Disabled="!_selectEditorContent.Disabled" @bind-Value="@_selectEditorContent.Content"></Editor>
                                            </ElevationTabItem>
                                        </ElevationTab>
                                    }
                                </MExpansionPanelContent>
                            </MExpansionPanel>
                        }
                        else
                        {
                            <MExpansionPanel Style="margin-bottom: 12px;">
                                <MExpansionPanelHeader Context="_">
                                    <div class="text-h6 d-flex align-center">
                                        @if (configObject.FromRelation)
                                        {
                                            <MIcon Color="primary" Class="mr-2">mdi-link-variant</MIcon>
                                        }
                                        @if (configObject.RelationConfigObjectId == 0 && !configObject.IsPublished && !configObject.IsEditing)
                                        {
                                            <div class="mr-2" style="height: 26px;width: 48px; background: #FF7D00; text-align: center; font-size: 12px;color: white; border-radius: 16px; font-weight: normal; line-height: 26px;">
                                                @T("Modified")
                                            </div>
                                        }
                                        <span>@configObject.Name</span>
                                        <span class="ml-3 text-caption">|</span>
                                        <sapn class="ml-2 text-caption">@configObject.FormatName</sapn>
                                        <MSpacer></MSpacer>
                                        <MButton StopPropagation Icon Class="mr-4" OnClick="()=> UpdateOtherConfigObjectContentAsync(configObject)">
                                            @if (!configObject.IsEditing)
                                            {
                                                <MIcon Color="#323D6F">@(configObject.RelationConfigObjectId == 0 ? "mdi-pencil" : "mdi-link-variant-off")</MIcon>
                                            }
                                            else
                                            {
                                                <MIcon Color="success">mdi-check</MIcon>
                                            }
                                        </MButton>
                                        @if (ConfigObjectType == ConfigObjectType.App)
                                        {
                                            <MButton StopPropagation Icon Class="mr-4"><MIcon Size="20" Color="#323D6F">fas fa-copy</MIcon></MButton>
                                        }
                                        <MButton StopPropagation Icon Class="mr-4" OnClick="()=>ShowReleaseModalAsync(configObject)"><MIcon Color="#323D6F">mdi-send</MIcon></MButton>
                                        <MMenu OffsetY>
                                            <ActivatorContent>
                                                <MButton @attributes="@context.Attrs" StopPropagation Icon Class="mr-4">
                                                    <MIcon Color="#323D6F">mdi-dots-vertical</MIcon>
                                                </MButton>
                                            </ActivatorContent>
                                            <ChildContent>
                                                <MList>
                                                    <MListItem>
                                                        <MIcon Class="mr-4" OnClick="()=>ShowReleaseHistoryAsync(configObject)">mdi-history</MIcon>
                                                        <MListItemContent>
                                                            <MListItemTitle>@T("Release history")</MListItemTitle>
                                                        </MListItemContent>
                                                    </MListItem>
                                                    <MListItem OnClick="()=>ShowRollbackModalAsync(configObject)">
                                                        <MIcon Class="mr-4">mdi-repeat</MIcon>
                                                        <MListItemContent>
                                                            <MListItemTitle>
                                                                @T("Rollback")
                                                            </MListItemTitle>
                                                        </MListItemContent>
                                                    </MListItem>
                                                    <MListItem OnClick="()=>RevokeAsync(configObject)">
                                                        <MIcon Class="mr-4">mdi-subdirectory-arrow-left</MIcon>
                                                        <MListItemContent>
                                                            <MListItemTitle>
                                                                @T("Revoke")
                                                            </MListItemTitle>
                                                        </MListItemContent>
                                                    </MListItem>
                                                    <MDivider></MDivider>
                                                    <MListItem OnClick="()=>RemoveAsync(configObject)">
                                                        <MIcon Class="mr-4" Color="error">mdi-delete</MIcon>
                                                        <MListItemContent>
                                                            <MListItemTitle Class="error--text">
                                                                @T("Delete")
                                                            </MListItemTitle>
                                                        </MListItemContent>
                                                    </MListItem>
                                                </MList>
                                            </ChildContent>
                                        </MMenu>
                                        <span class="mr-6 text-caption">|</span>
                                    </div>
                                </MExpansionPanelHeader>
                                <MExpansionPanelContent>
                                    @if (configObject.FromRelation && configObject.RelationConfigObjectId != 0)
                                    {
                                        <div class="mb-2">
                                            <MIcon Size="18" Color="#7681AB">mdi-link-variant</MIcon>
                                            <span style="font-size: 14px; color: #7681AB;">
                                                @T("Connected")
                                                <span class="text-caption mx-1 font-size: 6px !important;">|</span>
                                                @(configObject.IsPublished ? @T("Released") : @T("UnReleased"))
                                            </span>
                                        </div>
                                    }
                                    else if (configObject.FromRelation && configObject.RelationConfigObjectId == 0)
                                    {
                                        <div class="mb-2">
                                            <MIcon Size="18" Color="#7681AB">mdi-link-variant-off</MIcon>
                                            <span style="font-size: 14px; color: #7681AB;">@T("Covered")</span>
                                        </div>
                                    }
                                    <Editor Disabled="!configObject.IsEditing" @bind-Value="@configObject.Content"></Editor>
                                </MExpansionPanelContent>
                            </MExpansionPanel>
                        }
                    }
                </MExpansionPanels>
            </div>
        </div>
    </div>
</div>

<AddConfigObjectModal @ref="_addConfigObjectModal" AppDetail="_appDetail"
                      ConfigObjectType="ConfigObjectType"
                      OnSubmitAfter="@(async ()=>{ _configObjects = (await ConfigObjectCaller.GetConfigObjectsAsync(_selectCluster.Id, _appDetail.Id, ConfigObjectType, "")).Adapt<List<ConfigObjectModel>>(); })">
</AddConfigObjectModal>

<SheetDialog Value="_propertyConfigModal.Visible" ValueChanged="PropertyConfigModalValueChanged" Title="@(_propertyConfigModal.HasValue ? T("Modify config object item") : T("Create config object item"))" Icon="mdi-circle" IconColor="success">
    <MForm Class="full-height" Context="formContext" EnableValidation Model="_propertyConfigModal.Data">
        <div class="d-flex flex-column" style="width:100%; height:100%; padding: 48px 228px">
            <div>
                <div class="text-h6 d-flex align-center">
                    @_selectConfigObject.Name
                    <span class="ml-3 text-caption">|</span>
                    <sapn class="ml-2 text-caption">Properties</sapn>
                </div>
                <MTextField Class="mt-12" Disabled="_propertyConfigModal.HasValue" Dense Label="Key" Outlined @bind-Value="_propertyConfigModal.Data.Key"></MTextField>
                <MTextField Dense Label="Value" Outlined @bind-Value="_propertyConfigModal.Data.Value"></MTextField>
                <MTextarea Label="Description" Dense Outlined @bind-Value="_propertyConfigModal.Data.Description"></MTextarea>
            </div>
            <div class="d-flex justify-end align-end" style="width:100%; height:100%;">
                <MButton Class="rounded-pill" Color="primary" Width="100" OnClick="()=>SubmitPropertyConfigAsync(formContext)">@(_propertyConfigModal.HasValue ? T("Save") : T("Submit"))</MButton>
                </div>
            </div>
        </MForm>
    </SheetDialog>

    <SheetDialog @bind-Value="_configObjectReleaseModal.Visible" Title="@T("Release")" Icon="mdi-circle" IconColor="success">
        <MForm Class="full-height" Context="formContext" EnableValidation Model="_configObjectReleaseModal.Data">
            <div class="d-flex flex-column" style="width:100%; height: 100%; padding: 48px 228px">
                <div class="full-height" style="overflow-y: auto;">
                    <div class="text-h6 d-flex align-center">
                        @_selectConfigObject.Name
                        <span class="ml-3 text-caption">|</span>
                        <sapn class="ml-2 text-caption">Properties</sapn>
                    </div>
                    <MTextField Class="mt-12" Dense Label="@T("Release name")" Outlined @bind-Value="_configObjectReleaseModal.Data.Name"></MTextField>
                    <MTextarea Dense Label="@T("Description")" Outlined @bind-Value="_configObjectReleaseModal.Data.Comment"></MTextarea>
                    <p class="neutral--text" style="font-size:14px; font-weight:700;">@T("Changed configuration")</p>
                    @if (_selectConfigObject.FormatLabelCode.ToLower() == "properties")
                {
                    <div style="border-radius:8px; border:1px solid #E2E7F4;" class="py-3 mt-4">
                        <MDataTable Headers="_releaseHeaders"
                                DisableSort
                                TItem="ConfigObjectPropertyModel"
                                Items="@_selectConfigObjectAllProperties"
                                Class="table-border-none"
                                HideDefaultFooter>
                            <HeaderColContent Context="header">
                                @if (!string.IsNullOrWhiteSpace(header.Value))
                                {
                                    <span class="text-caption">@header.Text</span>
                                }
                            </HeaderColContent>
                            <ItemColContent>
                                @switch (@context.Header.Text)
                                {
                                    case "状态":
                                        if (context.Item.IsAdded)
                                        {
                                            <MIcon Color="#323D6F" Style="margin-bottom:2px;" Size="20">mdi-plus-circle</MIcon>
                                        }
                                        else if (context.Item.IsEdited)
                                        {
                                            <MIcon Color="#323D6F" Style="margin-bottom:2px;" Size="20">mdi-pencil</MIcon>
                                        }
                                        else if (context.Item.IsDeleted)
                                        {
                                            <MIcon Color="#323D6F" Style="margin-bottom:2px;" Size="20">mdi-delete</MIcon>
                                        }
                                        break;
                                    case "发布的值":
                                        if (context.Item.IsDeleted)
                                        {
                                            <span>@context.Item.Value</span>
                                        }
                                        else if (context.Item.IsEdited)
                                        {
                                            <span>@context.Item.TempValue</span>
                                        }
                                        break;
                                    case "未发布的值":
                                        if (!context.Item.IsDeleted)
                                        {
                                            <span>@context.Item.Value</span>
                                        }
                                        break;
                                    case "修改时间":
                                        <span>@context.Item.ModificationTime.ToString(T("$DateTimeFormat"))</span>
                                        break;
                                    default:
                                        @context.Value
                                        break;
                                }
                            </ItemColContent>
                        </MDataTable>
                    </div>
                }
                else
                {
                    <MTextarea BackgroundColor="#F6F8FD" Outlined Readonly Value="@_selectConfigObject.Content"></MTextarea>
                }
            </div>
            <div class="d-flex justify-end align-end" style="width:100%;">
                <MButton Class="rounded-pill" Color="primary" Width="100" OnClick="()=>ReleaseAsync(formContext)">@T("Submit")</MButton>
            </div>
        </div>
    </MForm>
</SheetDialog>

<RollbackModal @bind-Value="_showRollbackModal"
               FormatLabelCode="@_releaseHistory.FormatLabelCode"
               CurrentConfigObjectRelease="@(_releaseHistory.ConfigObjectReleases.FirstOrDefault() ?? new())"
               RollbackConfigObjectRelease="@(_releaseHistory.ConfigObjectReleases.LastOrDefault() ?? new())"
               OnClick="RollbackAsync"
               OnClickAfter="_handleRollbackOnClickAfter">
</RollbackModal>

<SheetDialog @bind-Value="_showReleaseHistory" Title="@T("Release history")" Icon="mdi-circle" IconColor="success">
    <div class="d-flex flex-column" style="width:100%; height:100%; padding: 48px 228px">
        <div>
            <div class="text-h6 d-flex align-center">
                @T("Config object name")
                <span class="ml-3 text-caption">|</span>
                <sapn class="ml-2 text-caption">Properties</sapn>
            </div>
        </div>
        <div class="d-flex full-height full-width mt-12" style="overflow: hidden;">
            <div class="full-height" style="min-width: 248px; border-right: 1px solid #E2E7F4; overflow-x: hidden; overflow-y: auto;">
                <MTimeline>
                    @{
                        int _index = 0;
                        foreach (var release in _configObjectReleases)
                        {
                            int index = _index;
                            _index++;
                            <MTimelineItem HideDot="!release.IsActive" Color="primary" Small Right @onclick="()=>OnTimelineItemClick(release)">
                                <OppositeContent>
                                    <div>
                                        <div style="@(release.IsActive ? "font-size:14px; font-weight: 600; color: #1B2559;" : "font-size:12px; font-weight: 500; color: #485585;")">
                                            @release.CreationTime.ToString("MM-dd").TrimStart('0')
                                        </div>
                                        @if (index == 1)
                                        {
                                            <div style="font-size:10px; font-weight: 400; color: #A3AED0;">@T("Current")</div>
                                        }
                                    </div>
                                </OppositeContent>
                                <ChildContent>
                                    <div>
                                        <div style="@(release.IsActive ? "font-size:14px; font-weight: 600; color: #1B2559;" : "font-size:12px; font-weight: 500; color: #485585;")">
                                            @release.Name
                                        </div>
                                        <div style="font-size:10px; font-weight: 400; color: #A3AED0;">@release.Version</div>
                                    </div>
                                </ChildContent>
                            </MTimelineItem>
                        }
                    }
                </MTimeline>
            </div>
            <div class="ml-12 content full-height full-width pr-1">
                <div class="full-width d-flex align-center pl-2 pr-3" style="height: 40px; background: #F0F3FA; border-radius: 8px;">
                    @if (_selectReleaseHistory.IsInvalid)
                    {
                        <MChip Class="mr-4" Small Label Color="#323D6F" TextColor="white">@T("Rollbacked")</MChip>
                    }
                    <span style="color: #485585; font-weight: 700; font-size: 16px;">@_selectReleaseHistory.Name</span>
                    <MSpacer></MSpacer>
                    <span style="color: #A3AED0; font-size:12px;">发布时间：@_selectReleaseHistory.CreationTime.ToString(T("$DateTimeFormat"))</span>
                    <span class="mx-2">|</span>
                    <span style="color: #323D6F; font-size:12px;">@_selectReleaseHistory.Creator</span>
                </div>
                <div class="mt-12" style="color: #1B2559;font-weight: 700; font-size: 14px;">
                    @_selectReleaseHistory.Version
                </div>
                <div style="color: #A3AED0; font-weight: 500; font-size: 12px;">
                    @T("App version from {xx}").Replace("{xx}",$"{_selectReleaseHistory.Name}")
                </div>
                <div class="mt-6">
                    <span style="color: #323D6F; font-size: 14px;">@T("Description")：</span>
                    <span style="color: #7681AB; font-size: 14px;">@_selectReleaseHistory.Comment</span>
                </div>
                @if (_releaseHistory.FormatLabelCode.Trim().ToLower() == "properties")
                {
                    <ElevationTab Class="mt-12"
                              Left
                              TabIndex="_releaseTabIndex"
                              TabIndexChanged="index=>ReleaseHistoryTabIndexChanged(index)"
                              ItemsClass="rounded-2"
                              Dense
                              Tabs="@(new List<string>{ @T("All configuration"), @T("Changed configuration")})">
                        <ElevationTabItem>
                            <div style="border:1px solid #E2E7F4;" class="py-1 mt-4 rounded-2">
                                <MDataTable Headers="_allConfigheaders"
                                        DisableSort
                                        TItem="ConfigObjectPropertyModel"
                                        Items="@_selectReleaseHistory.ConfigObjectProperties"
                                        Class="table-border-none"
                                        HideDefaultFooter>
                                    <HeaderColContent Context="header">
                                        <span class="text-caption">@header.Text</span>
                                    </HeaderColContent>
                                </MDataTable>
                            </div>
                        </ElevationTabItem>
                        <ElevationTabItem>
                            <div style="border:1px solid #E2E7F4;" class="py-1 mt-4 rounded-2">
                                <MDataTable Headers="_changedConfigheaders"
                                        DisableSort
                                        TItem="ConfigObjectPropertyModel"
                                        Items="@_changedProperties"
                                        Class="table-border-none"
                                        HideDefaultFooter>
                                    <HeaderColContent Context="header">
                                        <span class="text-caption">@header.Text</span>
                                    </HeaderColContent>
                                    <ItemColContent>
                                        @switch (@context.Header.Text)
                                        {
                                            case "状态":
                                                if (context.Item.IsAdded)
                                                {
                                                    <MIcon Class="mr-1" Color="#7681AB" Style="margin-bottom:2px;" Size="16">mdi-plus</MIcon>
                                                }
                                                else if (context.Item.IsEdited)
                                                {
                                                    <MIcon Class="mr-1" Color="#7681AB" Style="margin-bottom:2px;" Size="16">mdi-pencil</MIcon>
                                                }
                                                else if (context.Item.IsDeleted)
                                                {
                                                    <MIcon Class="mr-1" Color="#7681AB" Style="margin-bottom:2px;" Size="16">mdi-delete</MIcon>
                                                }
                                                break;
                                            default:
                                                @context.Value
                                                break;
                                        }
                                    </ItemColContent>
                                </MDataTable>
                            </div>
                        </ElevationTabItem>
                    </ElevationTab>
                }
                else
                {
                    <div class="mt-12" style="color: #1B2559; font-weight: 700; font-size: 14px;">@T("All configuration")</div>
                    <div class="py-3">
                        <MTextarea HideDetails="true" Outlined Readonly Value="@_selectReleaseHistory.Content"></MTextarea>
                    </div>
                }
            </div>
        </div>
        <div class="d-flex justify-end align-end" style="width:100%;">
            <MButton Class="rounded-pill" Color="primary" OnClick="RollbackToAsync">@T("Rollback to this version")</MButton>
        </div>
    </div>
</SheetDialog>

<SheetDialog Value="_showCloneModal" ValueChanged="CloneDialogValueChangedAsync" Title="@T("Clone config object")" Icon="mdi-circle" IconColor="success">
    <div class="d-flex flex-column" style="width:100%; height:100%; padding: 48px 228px;">
        <MStepper Value="_step" Elevation=0 Class="full-height">
            <MStepperHeader Style="box-shadow:none !important">
                <MStepperStep Step="1" Complete="_step>1">
                    @T("Choose app")
                </MStepperStep>
                <MDivider></MDivider>
                <MStepperStep Step="2">
                    @T("Choose config object")
                </MStepperStep>
            </MStepperHeader>
            <MStepperItems Style="height: calc(100% - 72px);">
                <MStepperContent Class="full-height" Style="padding:0 !important;" Step="1">
                    <div class="full-height d-flex flex-column justify-center align-center pt-12">
                        <div style="color: #A3AED0;">
                            @if (_isCloneAll)
                            {
                                <div>
                                    @T("Clone")&nbsp;
                                    <span style="font-size: 20px; font-weight: bold; color: #323D6F;">
                                        "@_projectDetail.Name"-"@_appDetail.Name"-"<span class="@($"{_selectCluster.EnvironmentColor}--text")">@_selectCluster.EnvironmentName</span>"-"@_selectCluster.ClusterName"
                                    </span>
                                    &nbsp; @T("All configuration to")
                                </div>
                            }
                            else
                            {
                                <div>
                                    @T("Clone")&nbsp;
                                    <span style="font-size: 20px; font-weight: bold; color: #323D6F;">
                                        "@_projectDetail.Name"-"@_appDetail.Name"-"<span class="@($"{_selectCluster.EnvironmentColor}--text")">@_selectCluster.EnvironmentName</span>"-"@_selectCluster.ClusterName"
                                    </span>
                                    &nbsp; @T("`Configuration")"@_selectConfigObject.Name"@T("To")
                                </div>
                            }
                        </div>
                        <div class="d-flex justify-end mt-12 full-width">
                            <MRow NoGutters>
                                <MCol>
                                    <MCard Ripple="false" Style="@(_cloneAppSelect ? "border:2px solid #3613CC !important" : "")" Class="d-flex flex-column justify-end align-center mr-6" Height="414" Elevation="0" Color="@(_cloneAppSelect ? "white" : "#F0F3FA")" OnClick="SelectOtherApp">
                                        <div class="d-flex flex-column align-center" style="@_cloneAppCardStyle">
                                            <div class="hover-pointer d-flex align-center justify-center" style="@($"border-radius: 16px; width: 100px; height: 100px; background:{(_cloneAppSelect ? "#4318FF" : "#fff" )}")">
                                                <MIcon Size="56" Color="@(_cloneAppSelect ? "#fff" : "#323D6F")">mdi-view-carousel</MIcon>
                                            </div>
                                            <span class="mt-6" style="font-weight: 700; font-size: 20px; color: #323D6F;">@T("Other app")</span>
                                        </div>
                                        <FadeTransition>
                                            <ShowTransitionElement Value="_cloneAppSelect" Class="full-width px-6 mb-15">
                                                <div class="mt-6" @onclick:stopPropagation>
                                                    <MSelect Value="_cloneSelectProjectId"
                                                             ValueChanged="projectId=>ProjectValueChangedAsync(projectId)"
                                                             Label="@T("Project")"
                                                             MenuProps="props => props.OffsetY = true"
                                                             Outlined
                                                             Dense
                                                             TItem="ProjectModel"
                                                             TItemValue="int"
                                                             TValue="int"
                                                             Items="_allProjects"
                                                             ItemText="l=>l.Name"
                                                             ItemValue="l=>l.Id">
                                                    </MSelect>
                                                    <MSelect @bind-Value="_cloneSelectAppId"
                                                             Label="@T("App")"
                                                             MenuProps="props => props.OffsetY = true"
                                                             Outlined
                                                             Dense
                                                             HideDetails="true"
                                                             Items="_cloneApps"
                                                             ItemText="l=>l.Name"
                                                             ItemValue="l=>l.Id">
                                                    </MSelect>
                                                </div>
                                            </ShowTransitionElement>
                                        </FadeTransition>
                                    </MCard>
                                </MCol>
                                <MCol>
                                    <MCard Ripple="false" Style="@(_cloneEnvSelect ? "border:2px solid #3613CC !important" : "")" Class="d-flex flex-column justify-center align-center" Height="414" Elevation="0" Color="@(_cloneEnvSelect ? "white" : "#F0F3FA")" OnClick="SelectOtherEnv">
                                        <div class="d-flex flex-column align-center" style="@_cloneEnvCardStyle">
                                            <div class="hover-pointer d-flex align-center justify-center" style="@($"border-radius: 16px; width: 100px; height: 100px; background:{(_cloneEnvSelect ? "#4318FF" : "#fff" )}")">
                                                <MIcon Size="56" Color="@(_cloneEnvSelect ? "#fff" : "#323D6F")">mdi-cloud</MIcon>
                                            </div>
                                            <span class="mt-6" style="font-weight: 700; font-size: 20px; color: #323D6F;">@T("Other environments/clusters currently app")</span>
                                        </div>
                                    </MCard>
                                </MCol>
                            </MRow>
                        </div>
                        <div class="d-flex justify-end align-end full-height" style="width:100%;">
                            <MButton Disabled="@(!_cloneAppSelect && !_cloneEnvSelect || (_cloneAppSelect && _cloneSelectAppId==0))" Width="100" Class="rounded-pill" Color="primary" OnClick="CloneNextClick">@T("Next")</MButton>
                        </div>
                    </div>
                </MStepperContent>
                <MStepperContent Class="full-height" Step="2">
                    <div style="overflow-y: auto; height: calc(100% - @(IsNeedRebase ? "80px" :"48px"));">
                        <p style="font-size:14px; font-weight:700; color:#1B2559">@T("Clusters requiring cloning")</p>
                        <MChipGroup Multiple Column Values="_selectEnvClusterIds" ValuesChanged="CloneEnvClusterValueChanged">
                            @foreach (var item in _cloneSelectApp.EnvironmentClusters)
                            {
                                <MChip Value="item.Id" Large Class="envClusterChip mr-6 mb-6" Filter Outlined ActiveClass="@($"{item.EnvironmentColor}")">
                                    <div class="@($"{item.EnvironmentColor}--text")">@item.EnvironmentName</div>&nbsp;&nbsp;
                                    <div style="color:#05CD99">@item.ClusterName</div>
                                </MChip>
                            }
                        </MChipGroup>
                        <p style="font-size:14px; font-weight:700; color:#1B2559">@T("Config object")</p>
                        <MCheckbox Value="CloneConfigObjectAllChecked"
                                   ValueChanged="CloneConfigObjectAllCheckedChanged"
                                   HideDetails="true"
                                   Label="@(_cloneConfigObjectAllChecked ? @T("Deselect all") : @T("Select all"))"
                                   Color="primary"></MCheckbox>
                        <MExpansionPanels Flat Accordion>
                            @foreach (var configObject in _configObjects)
                            {
                                var formatLabelCode = configObject.FormatLabelCode.Trim().ToLower();
                                if (formatLabelCode == "properties")
                                {
                                    <MExpansionPanel Style="margin-bottom: 12px;">
                                        <MExpansionPanelHeader Style="padding-left: 0 !important;" Context="_">
                                            <div class="d-flex align-center">
                                                <div class="d-flex align-center" @onclick:stopPropagation>
                                                    @if (configObject.IsNeedRebase)
                                                    {
                                                        <MButton Outlined Color="warning" Class="mr-4" OnClick="()=>CloneConfigObjectCoverClick(configObject)">
                                                            <MIcon>mdi-alert-outline</MIcon>
                                                            解决冲突
                                                        </MButton>
                                                    }
                                                    <MCheckbox Value="configObject.IsChecked"
                                                       ValueChanged="value=>CloneConfigObjectCheckValueChanged(configObject,value)"
                                                       HideDetails="true"
                                                       Style="margin: 0 8px 0 0 !important; padding: 0 !important;"
                                                       Color="primary"></MCheckbox>
                                                    <MTextField HideDetails="true"
                                                        Dense
                                                        Style="max-width: 270px;"
                                                        Label="@T("Name")"
                                                        Outlined
                                                        Value="configObject.Name"
                                                        TValue="string"
                                                        ValueChanged="value=>CloneConfigObjectNameChanged(configObject,value)"></MTextField>
                                                </div>
                                                <span class="ml-3 text-caption">|</span>
                                                <sapn class="ml-2 text-caption">properties</sapn>
                                            </div>
                                        </MExpansionPanelHeader>
                                        <MExpansionPanelContent Style="padding-left: 8px;">
                                            <div style="border-radius: 8px; border: 1px solid #E2E7F4; padding:12px 24px;">
                                                <MRow Style="color: #A3AED0; font-size: 14px;" NoGutters>
                                                    <span style="width: 47.5%">Name</span>
                                                    <span style="width: 47.5%">Code</span>
                                                    <span class="d-flex justify-center" style="width: 5%">@T("Operation")</span>
                                                </MRow>
                                                <MDivider Class="mt-3 mx-n6"></MDivider>
                                                @foreach (var item in configObject.ConfigObjectPropertyContents)
                                                {
                                                    <MRow Class="pt-4" NoGutters Justify="JustifyTypes.SpaceBetween">
                                                        <MTextField Class="pr-6" Dense HideDetails="true" Outlined @bind-Value="item.Key"></MTextField>
                                                        <MTextField Dense HideDetails="true" Outlined @bind-Value="item.Value"></MTextField>
                                                        <div class="d-flex justify-end align-center ml-6">
                                                            <MIcon Color="error" OnClick="()=>RemoveProperty(item.Key,configObject)" Class="hover-pointer mr-3">mdi-delete-outline</MIcon>
                                                        </div>
                                                    </MRow>
                                                }
                                            </div>
                                        </MExpansionPanelContent>
                                    </MExpansionPanel>
                                }
                                else
                                {
                                    <MExpansionPanel Style="margin-bottom: 12px;" @key="configObject">
                                        <MExpansionPanelHeader Style="padding-left: 0 !important;" Context="_">
                                            <div class="d-flex align-center">
                                                <div class="d-flex align-center" @onclick:stopPropagation>
                                                    @if (configObject.IsNeedRebase)
                                                    {
                                                        <MButton Outlined Color="warning" Class="mr-4" OnClick="()=>CloneConfigObjectCoverClick(configObject)">
                                                            <MIcon>mdi-alert-outline</MIcon>
                                                            解决冲突
                                                        </MButton>
                                                    }
                                                    <MCheckbox Value="configObject.IsChecked"
                                                       ValueChanged="value=>CloneConfigObjectCheckValueChanged(configObject,value)"
                                                       HideDetails="true"
                                                       Style="margin: 0 8px 0 0 !important; padding: 0 !important;"
                                                       Color="primary"></MCheckbox>
                                                    <MTextField HideDetails="true"
                                                        Dense
                                                        Style="max-width: 270px;"
                                                        Label="@T("Name")"
                                                        Outlined
                                                        Value="configObject.Name"
                                                        TValue="string"
                                                        ValueChanged="value=>CloneConfigObjectNameChanged(configObject,value)"></MTextField>
                                                </div>
                                                <span class="ml-3 text-caption">|</span>
                                                <sapn class="ml-2 text-caption">@configObject.FormatName</sapn>
                                            </div>
                                        </MExpansionPanelHeader>
                                        <MExpansionPanelContent Style="padding-left: 8px;">
                                            <MTextarea Outlined @bind-Value="configObject.Content"></MTextarea>
                                        </MExpansionPanelContent>
                                    </MExpansionPanel>
                                }
                            }
                        </MExpansionPanels>
                        @if (IsNeedRebase)
                        {
                            <div style="width: calc(100% - 48px); position: absolute; bottom: 0;">
                                <MAlert Prominent
                                    Type="AlertTypes.Warning">
                                    配置对象名称冲突，配置对象名称相同将会覆盖配置信息，如需克隆请修改配置对象名称。
                                </MAlert>
                            </div>
                        }
                        else
                        {
                            <div style="position: absolute; bottom: 0; right: 0;">
                                <MButton Outlined Width="100" Class="rounded-pill mr-6" Color="primary" OnClick="ClonePrevClick">@T("Back")</MButton>
                                <MButton Width="100" Class="rounded-pill" Color="primary" OnClick="CloneAsync">@T("Clone")</MButton>
                            </div>
                        }
                    </div>
                </MStepperContent>
            </MStepperItems>
        </MStepper>
    </div>
</SheetDialog>

<RelationModal @ref="_relation" AppDetail="_appDetail" OnSubmitAfter="()=>GetConfigObjectsAsync(EnvironmentClusterId,ConfigObjectType)">
</RelationModal>
