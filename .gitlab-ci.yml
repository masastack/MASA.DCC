# include:
#   - project: 'louzhijian/devops'
#     ref: master
#     file: 'devops/sonar-scanner.yml'

stages:
#   - sonarqube
  - docker-dev
  - deploy-dev
  - deploy-test
  - docker-prd
  - deploy-prd

variables:
  NEW_ALI_REGISTRY: registry.cn-hangzhou.aliyuncs.com
  NEW_IMAGE_DCC: $NEW_ALI_REGISTRY/masa/masa-dcc-service-admin:$CI_COMMIT_TAG
  NEW_IMAGE_DCC_DEV: $NEW_ALI_REGISTRY/masa/masa-dcc-service-admin:dev-$CI_PIPELINE_ID
  NEW_IMAGE_DCC_UI: $NEW_ALI_REGISTRY/masa/masa-dcc-web-admin-server:$CI_COMMIT_TAG
  NEW_IMAGE_DCC_UI_DEV: $NEW_ALI_REGISTRY/masa/masa-dcc-web-admin-server:dev-$CI_PIPELINE_ID
  DOCKER_DCC_PATH: ./src/Services/Masa.Dcc.Service/Dockerfile
  DOCKER_DCC_UI_PATH: ./src/Web/Masa.Dcc.Web.Admin/Masa.Dcc.Web.Admin.Server/Dockerfile
  NAMESPACE_DEV: masastack-dev
  NAMESPACE_TEST: masastack-test
  NAMESPACE_PRD: masa-new-dcc-prd

docker-build-dev:
  stage: docker-dev
  tags:
    - linux-shell
  before_script:
    - docker login -u $CI_ALI_REGISTRY_USER -p $CI_ALI_REGISTRY_PASSWD $CI_ALI_REGISTRY_DOMAIN 
  only:
    - main  
  script:
    - docker build -f $DOCKER_DCC_PATH -t $NEW_IMAGE_DCC_DEV .
    - docker push $NEW_IMAGE_DCC_DEV 
    - docker build -f $DOCKER_DCC_UI_PATH -t $NEW_IMAGE_DCC_UI_DEV .
    - docker push $NEW_IMAGE_DCC_UI_DEV
  after_script:
    - docker rmi $NEW_IMAGE_DCC_DEV   
    - docker rmi $NEW_IMAGE_DCC_UI_DEV

deploy-dev-new:
  stage: deploy-dev
  image: registry.cn-hangzhou.aliyuncs.com/masa/library:helm3_latest
  only:
    - main
  script:
    - echo $KUBE_CONFIG_NEW_YDY | base64 -d > ./config
    - echo $CI_PIPELINE_ID
    - helm --kubeconfig ./config upgrade --install masastack masastack/masastack --version 1.0.0-rc2 -n $NAMESPACE_DEV --set dcc.image.tag=$NEW_IMAGE_DCC_DEV -f ./values.yaml
  retry: 2
  when: manual

deploy-test:
  stage: deploy-test
  image: registry.cn-hangzhou.aliyuncs.com/masa/library:helm3_latest
  only:
    - main
  script:
    - echo $KUBE_CONFIG_NEW_YDY | base64 -d > ./config
    - echo $CI_PIPELINE_ID
    - helm --kubeconfig ./config upgrade --install masastack masastack/masastack --version 1.0.0-rc2 -n $NAMESPACE_TEST --set dcc.image.tag=$NEW_IMAGE_DCC_DEV -f ./values.yaml
  retry: 2
  when: manual

docker-build-prd:
  stage: docker-prd
  tags:
    - linux-shell
  before_script:
    - docker login -u $CI_ALI_REGISTRY_USER -p $CI_ALI_REGISTRY_PASSWD $CI_ALI_REGISTRY_DOMAIN 
  only:
    - tags  
  script:
    - docker build -f $DOCKER_DCC_PATH -t $NEW_IMAGE_DCC .
    - docker push $NEW_IMAGE_DCC
    - docker build -f $DOCKER_DCC_UI_PATH -t $NEW_IMAGE_DCC_UI .
    - docker push $NEW_IMAGE_DCC_UI
  after_script:
    - docker rmi $NEW_IMAGE_DCC  
    - docker rmi $NEW_IMAGE_DCC_UI
  
deploy-prd:
  stage: deploy-prd
  tags:
    - linux-shell
  before_script:
    - docker login -u $CI_ALI_REGISTRY_USER -p $CI_ALI_REGISTRY_PASSWD $CI_ALI_REGISTRY_DOMAIN 
  only:
    - tags
  script:
    - echo $KUBE_CONFIG_IOT  | base64 -d > ./config
    - kubectl --kubeconfig ./config set image deployment/masa-dcc-service-admin masa-dcc-service-admin=$NEW_IMAGE_DCC -n  loncloud
    - kubectl --kubeconfig ./config set image deployment/masa-dcc-web-admin-server masa-dcc-web-admin-server=$NEW_IMAGE_DCC_UI -n  loncloud
  retry: 2
  when: manual